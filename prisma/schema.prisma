// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Service {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  icon        String
  title       String
  description String
  position    Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([position])
}

model FAQ {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NavigationMenu {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  path      String?
  order     Int      @default(0)
  isVisible Boolean  @default(true)
  menuType  String   @default("website") // "website" or "admin"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BookingFormField {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  label        String
  name         String
  type         String
  required     Boolean   @default(false)
  readonly     Boolean   @default(false)
  position     Int
  options      String[]
  isActive     Boolean   @default(true)
  autoCalculate Json?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model ServiceConfig {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  serviceName     String   @unique
  showPickup      Boolean  @default(true)
  showDestination Boolean  @default(true)
  showDirections  Boolean  @default(true)
  firstStepFields String[] @default([])
  secondStepFields String[] @default([])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model BookingService {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  isActive  Boolean  @default(true)
  position  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// @map("transactions")
model Transaction {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  whatsapp     String?  // Made optional to handle existing null values
  service      String
  pickup       Json     // { lat: number, lng: number, address: string }
  destination  Json     // { lat: number, lng: number, address: string }
  distance     Float
  subscription Boolean  @default(false)
  notes        String?
  status       String   @default("pending") // pending, completed, cancelled
  dynamicFields Json?   // Store additional form fields
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Page {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  slug      String   @unique // about, contact, how-to-order
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Testimonial {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  role      String
  content   String
  position  Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([position])
}

model HowToOrder {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  position  Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([position])
}
